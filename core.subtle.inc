// auto generated by gen.py, do not modify!
#ifndef SUBTLE_CORE_INC_H
#define SUBTLE_CORE_INC_H
const char* CORE_SOURCE =
"Fn.new{\n"
"Object.println = Fn.new{\n"
"    self.print\n"
"    \"\n\".print\n"
"}\n"
"\n"
"let Entry = {\n"
"    init = Fn new{|k, v|\n"
"        self key = k\n"
"        self value = v\n"
"    }\n"
"}\n"
"\n"
"Object.rawEntryFromIndex = Fn.new{|i|\n"
"    return Entry new(\n"
"        self rawSlotAt(i),\n"
"        self rawValueAt(i)\n"
"    )\n"
"}\n"
"\n"
"Map.rawEntryFromIndex = Fn.new{|i|\n"
"    return Entry new(\n"
"        self rawKeyAt(i),\n"
"        self rawValueAt(i)\n"
"    )\n"
"}\n"
"\n"
"let MethodIterator = {\n"
"    init = Fn.new{|obj, slot|\n"
"        self._obj = obj\n"
"        self._slot = slot\n"
"    },\n"
"    iterMore = Fn.new{|v| return self._obj.rawIterMore(v) },\n"
"    iterNext = Fn.new{|v|\n"
"        return self._obj.\n"
"            getSlot(self._slot).\n"
"            callWith(self._obj, v)\n"
"    }\n"
"}\n"
"\n"
"let fromSlot = Fn.new{|slot|\n"
"    return Fn.new{ return MethodIterator.new(self, slot) }\n"
"}\n"
"\n"
"Object.slots   = fromSlot.call(\"rawSlotAt\")\n"
"Object.values  = fromSlot.call(\"rawValueAt\")\n"
"Object.entries = fromSlot.call(\"rawEntryFromIndex\")\n"
"Map.keys       = fromSlot.call(\"rawSlotAt\")\n"
"Map.values     = fromSlot.call(\"rawValueAt\")\n"
"Map.entries    = fromSlot.call(\"rawEntryFromIndex\")\n"
"\n"
"List.fromIterator = Fn.new{|it|\n"
"    let list = List.new()\n"
"    for (item = it)\n"
"        list.add(item)\n"
"    return list\n"
"}\n"
"}.call\n"
;
#endif
