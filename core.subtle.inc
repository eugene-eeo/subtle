// auto generated by gen.py, do not modify!
#ifndef SUBTLE_CORE_INC_H
#define SUBTLE_CORE_INC_H
const char* CORE_SOURCE =
"[\n"
"Object :: call   [ self ]\n"
"Object :: call:_ [ self ]\n"
"Object :: ifTrue:f ifFalse:_ [ f call ]\n"
"Object :: != arg [ (self == arg) not ]\n"
"\n"
"false proto :: ifTrue:_ ifFalse:f [ f call ]\n"
"nil proto   :: ifTrue:_ ifFalse:f [ f call ]\n"
"\n"
"Ether :: if:x then:t        [ x ifTrue:t ifFalse:nil ]\n"
"Ether :: if:x then:t else:f [ x ifTrue:t ifFalse:f ]\n"
"Ether :: while:x do:f [\n"
"    if: (x call) then: [\n"
"        f call\n"
"        while: x do: f\n"
"    ]\n"
"]\n"
"Ether :: do:f while:x [\n"
"    f call\n"
"    if: (x call) then: [\n"
"        do: f while: x\n"
"    ]\n"
"]\n"
"Ether :: assert:f msg:y [\n"
"    if: (f not) then: [\n"
"        Fiber abort:y\n"
"    ]\n"
"]\n"
"\n"
"MsgRaw := {}\n"
"MsgRaw :: perform:msg [ msg ]\n"
"Msg :: raw [\n"
"    return MsgRaw\n"
"]\n"
"] call\n"
;
#endif
