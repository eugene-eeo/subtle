let get_fiber = Fn.new{
    return Fiber.new{|v|
        while (true) {
            v println;
            let s = Fiber.yield(v);
            if (!s) break;
            v = v + 1;
        }
    };
};

let f = get_fiber.call;
f.call(1);
assert f.call(true) == 2;
assert f.call(true) == 3;

let x = {};
let f = Fiber.new{
    x.setSlot = Fn.new{|k, v|
        let rv = Fiber.yield;
        x.setOwnSlot(k, v);
        return rv;
    };
    assert (x.b = 1) == 2;
    assert x.b == 1;
};
f.call;
assert !x.hasOwnSlot("b");
f.call(2);
