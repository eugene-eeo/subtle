# Simple upvalues
let outer = Fn.new {
    let a = 1;
    let f = Fn.new {
        let b = 2;
        assert a == 1;
        assert b == 2;
    };
    f.call();
};
outer.call();

# Nested upvalues
let outer = Fn.new {
  let a = 1;
  let b = 2;
  let middle = Fn.new {
    let c = 3;
    let d = 4;
    let inner = Fn.new {
      assert a + c + b + d == 10;
    };
    inner.call();
  };
  middle.call();
};
outer.call();

# Upvalues closed over
let outer = Fn.new {
    let x = "outside";
    return Fn.new {
        x println
        assert x == "outside";
        return x;
    };
};

assert outer.call().call() == "outside";

# Upvalues close over references
let outer = Fn.new {
    let x = 0;
    return {
        add = Fn.new{ x = x + 1; },
        get = Fn.new{ return x;  }
    };
};

let obj = outer.call();
obj.add();
assert obj.get() == 1;
obj.add();
assert obj.get() == 2;
